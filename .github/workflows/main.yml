name: CI

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, windows-2019]
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        if: runner.os == 'Windows'
        with:
          python-version: "3.8.5"
      - run: echo "PYTHON3=$pythonLocation\python" >> $GITHUB_ENV
        if: runner.os == 'Windows'
        shell: bash
      - name: Install LLVM (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install llvm --global
      - name: Setup libclang
        run: echo "LIBCLANG_PATH=C:\ProgramData\scoop\apps\llvm\current\bin" >> $GITHUB_ENV
        if: runner.os == 'Windows'
        shell: bash
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run-script build-release
        if: github.event_name == 'release'
      - run: npm run-script build
        if: github.event_name != 'release'
      - run: npm test
        if: github.event_name != 'release'
      - name: Pack cssparse-darwin-64
        if: matrix.os == 'macos-10.15'
        run: npm pack
        working-directory: npm/node_modules/cssparse-darwin-64
      - name: Pack cssparse-linux-64
        if: matrix.os == 'ubuntu-18.04'
        run: npm pack
        working-directory: npm/node_modules/cssparse-linux-64
      - name: Pack cssparse-windows-64
        if: matrix.os == 'windows-2019'
        run: npm pack
        working-directory: npm/node_modules/cssparse-windows-64
      - name: Pack cssparse
        if: matrix.os == 'ubuntu-18.04'
        run: npm pack
        working-directory: npm/node_modules/cssparse
      - name: Upload packed npm tarballs
        uses: actions/upload-artifact@v2
        with:
          name: npm-packages
          path: npm/node_modules/*/*.tgz

  publish:
    if: github.event_name == 'release'
    needs: [build]
    runs-on: ubuntu-18.04
    steps:
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v2
        with:
          name: npm-packages
      - name: publish cssparse-darwin-64
        run: ls | xargs npm publish
        working-directory: cssparse-darwin-64
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: publish cssparse-linux-64
        run: ls | xargs npm publish
        working-directory: cssparse-linux-64
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: publish cssparse-windows-64
        run: ls | xargs npm publish
        working-directory: cssparse-windows-64
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: publish cssparse
        run: ls | xargs npm publish
        working-directory: cssparse
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
